import{_ as s,c as i,o as a,a2 as l}from"./chunks/framework.84TDCN6B.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"MongoDB/基础.md","filePath":"MongoDB/基础.md"}'),t={name:"MongoDB/基础.md"},e=l(`<p>基本概念：</p><ul><li>文档是基本数据单元，是一组键值对，类似于对象、哈希表、字典。相当于关系数据库中的行。</li><li>集合：相当于数据库中的表，一个集合包含若干个文档。</li><li>数据库：数据库包含若干个集合，一个MongoDB实例可以拥有多个独立的数据库。</li><li>Mkngo Shell：MongoDB自带命令行，是一个功能齐全的JavaScript解释器。</li></ul><h2 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to &quot;文档&quot;">​</a></h2><p>如下为一个只包含一组键值对的文档，文档的键是a，值是整数1：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如下是个空文档，也是合法的：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span></span></code></pre></div><p>文档的键命名规则：</p><ul><li>不能含有空字符</li><li>点 . 和美元符 $ 是特殊字符，也叫做保留字符，不能用于普通文档的键</li><li>不要使用_id，这是文档的id标识</li><li>基本上只推荐使用字母和数字。</li><li>键名称区分大小写，值区分类型，例如下面几个文档都是不同的：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>不能包含重复的键，例如下面文档不合法：</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">​</a></h2><p>与关系数据库不同，集合的每一行可以有不同的“形状”，例如如下集合：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{&#39;a&#39; : 1 , &#39;b&#39; : 2}</span></span>
<span class="line"><span>{&#39;cccc&#39; : 3 , &#39;ddd&#39; : &#39;hello&#39;}</span></span></code></pre></div><p>既然任何文档都可以放入集合中，为什么需要多个集合呢，全部放到一个集合不好吗？放入多个集合的好处如下：</p><ul><li>尽量保持每个集合的结构相同，可以更方便理解集合内容，便于书写查询语句。</li><li>活去接集合列表比提取文档列表要快得多，先挑选出需要查找的集合可以缩小查找范围。</li><li>在单个集合中保持类型的一致性可以更高效的对集合进行索引</li></ul><p>集合的命名规则：</p><ul><li>名称不能为空，不能含有空字符</li><li>不能以 system. 开头，该前缀是内置集合。</li><li>不能以db. 开头，这个表示当前数据库。</li><li>不能是db的属性名和方法名，例如db.version表示数据库的版本，因此version不能用作集合名。</li><li>名称中不能包含美元符$。</li><li>点号 . 通常用于表示子集合，因此也不推荐在单个集合名称中包含点号 . 。</li></ul><p><strong>子集合</strong></p><p>使用点号分割子集合只是一种管理，例如blog、blog.users、blog.articles。但是，这三个集合没有任何关系。</p><h2 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h2><p>每个数据库有零个、一个或多个集合。推荐做法是将单个程序的所有数据都存储在一个数据库中。</p><p>数据库的命名规则：</p><ul><li>不能为空，不能包含空字符。</li><li><code>不能包含 / \\ . &#39; &quot; &lt; &gt; ? $等特殊字符，基本上只能使用字母和数字。</code></li><li>名称区分大小写</li><li>长度限制64字节。</li><li>一些数据库名称是保留的，也不能使用，包括：db、test、admin、local、config等。</li></ul><p>要访问一个集合，使用如下格式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>db.数据库名称.集合名称</span></span></code></pre></div><p>例如，blog数据库的users集合：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>db.blog.users</span></span></code></pre></div>`,29),p=[e];function n(h,d,k,o,c,r){return a(),i("div",null,p)}const u=s(t,[["render",n]]);export{E as __pageData,u as default};
