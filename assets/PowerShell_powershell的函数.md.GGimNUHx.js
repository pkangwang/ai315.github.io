import{_ as a,c as s,o as n,a2 as e}from"./chunks/framework.84TDCN6B.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"PowerShell/powershell的函数.md","filePath":"PowerShell/powershell的函数.md"}'),p={name:"PowerShell/powershell的函数.md"},t=e(`<h2 id="没有参数的函数" tabindex="-1">没有参数的函数 <a class="header-anchor" href="#没有参数的函数" aria-label="Permalink to &quot;没有参数的函数&quot;">​</a></h2><p>定义语法如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function 函数名 { 函数体 }</span></span></code></pre></div><p>执行语法如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>函数名</span></span></code></pre></div><h2 id="有参数的函数" tabindex="-1">有参数的函数 <a class="header-anchor" href="#有参数的函数" aria-label="Permalink to &quot;有参数的函数&quot;">​</a></h2><p>定义一个有参数的函数的语法如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function 函数名([类型]$参数1,[类型]$参数2) {</span></span>
<span class="line"><span>    函数体</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>定义参数的类型不是必须的，如果不定义，那么不管传入的参数是什么类型，都始终将其视作字符串。</p><p>一个简单的带参数的函数示例如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function Info($name,$age) {  </span></span>
<span class="line"><span>   echo &quot;姓名：$name，年龄：$age&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>传参：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&gt; Info -name 张三 -age 39</span></span>
<span class="line"><span>姓名：张三，年龄：39</span></span></code></pre></div><h2 id="参数的默认值" tabindex="-1">参数的默认值 <a class="header-anchor" href="#参数的默认值" aria-label="Permalink to &quot;参数的默认值&quot;">​</a></h2><p>在函数定义时可以给参数一个默认值，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>function Info($name,$age=38) {  </span></span>
<span class="line"><span>   echo &quot;姓名：$name，年龄：$age&quot;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Info -name 张三 </span></span>
<span class="line"><span></span></span>
<span class="line"><span># 姓名：张三，年龄：38（age没有赋值，取默认）</span></span></code></pre></div>`,16),l=[t];function i(o,c,h,d,r,u){return n(),s("div",null,l)}const b=a(p,[["render",i]]);export{v as __pageData,b as default};
