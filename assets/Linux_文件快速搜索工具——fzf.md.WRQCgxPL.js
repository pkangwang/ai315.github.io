import{_ as e,c as t,o as s,a2 as a}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/文件快速搜索工具——fzf.md","filePath":"Linux/文件快速搜索工具——fzf.md"}'),p={name:"Linux/文件快速搜索工具——fzf.md"},i=a('<p><img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" alt="fzf | 500"></p><p>官网： <a href="https://github.com/junegunn/fzf" target="_blank" rel="noreferrer">https://github.com/junegunn/fzf</a></p><p>可以搜索的项目：</p><ul><li>文件</li><li>历史记录</li><li>进程</li><li>主机名</li><li>书签</li><li>git提交记录</li><li>等等</li></ul><p>安装：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt install fzf</span></span></code></pre></div><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>快捷键：</p><ul><li>Ctrl+T 在命令行粘贴已选择的文件或目录</li><li>Ctrl+R 从历史记录中粘贴选择项到命令行</li><li>Alt+C cd到选择项</li></ul><p><strong>自动补全</strong></p><p>输入<code>**</code>，按Tab触发自动补全</p><p>fzf 将启动交互式查找器，从 STDIN 读取列表，然后编写 选定项目到 STDOUT，其原理如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>find * -type f | fzf &gt; selected</span></span></code></pre></div><p><strong>为 fzf 应用边框</strong></p><p>你可以使用 --border 选项为 fzf 应用边框，有多种边框可用，如 rounded（圆角）、sharp（尖角）等。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>fzf --border=rounded</span></span></code></pre></div><p><strong>使用 fzf 在 Bash 历史中进行搜索</strong></p><p>当然，Bash 历史记录中有 CTRL+R 的反向搜索功能。但如果你想使用 fzf 来获得更好的外观，可以运行以下命令：</p><p>history | fzf</p><p><strong>在 fzf 中预览文件</strong></p><p>有时，如果你可以获得你搜索的文件的小型预览，那会很有帮助。</p><p>幸运的是，fzf 提供了一个预览选项。你可以使用 --preview 来访问它。我在这里使用 find 命令使其更加有用。</p><p>find /home/$USER -type f | fzf --preview &#39;less {}&#39;</p>',23),n=[i];function l(o,r,c,f,d,h){return s(),t("div",null,n)}const _=e(p,[["render",l]]);export{g as __pageData,_ as default};
