import{_ as s,c as a,o as i,a2 as t}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/apt.md","filePath":"Linux/apt.md"}'),p={name:"Linux/apt.md"},e=t(`<h2 id="更换镜像源" tabindex="-1">更换镜像源 <a class="header-anchor" href="#更换镜像源" aria-label="Permalink to &quot;更换镜像源&quot;">​</a></h2><p>Ubuntu的/etc/source/sourcs.list 文件格式如下：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb或deb-src</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  仓库地址</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 发行版代号-软件类别</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 自由软件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 非自由软件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ......</span></span></code></pre></div><p>我们说镜像加速，实际上就是修改仓库地址即可，其它结构是完全同步过来的。比如默认仓库地址是<code>http ://archive.ubuntu.com/ubuntu/</code>，把这个换成 <code>https://mirrors.aliyun.com/ubuntu/</code>即可。</p><p>使用如下命令更换镜像源：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;s@http://archive.ubuntu.com/ubuntu/@https://mirrors.aliyun.com/ubuntu/@g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   /etc/apt/sources.list</span></span></code></pre></div><p>注意，上述命令-i 选项会直接修改原文件，推荐先不加这个选项查看输出结果，确认没问题后再修改原文件。</p><p>然后：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 检查文件内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 更新软件列表</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  upgrade</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 更新软件</span></span></code></pre></div><h2 id="apt的使用" tabindex="-1">apt的使用 <a class="header-anchor" href="#apt的使用" aria-label="Permalink to &quot;apt的使用&quot;">​</a></h2><p>apt是Ubuntu系统默认的软件包管理器，apt的主要操作如下表</p><ul><li>搜索软件包 ： apt search 名称</li><li>更新软件仓库清单 apt update</li><li>升级本地的所有软件包 apt upgrade</li><li>安装软件 ： apt install 名称1 名称2...</li></ul><p>如果需要严格限定软件的名称，避免搜索结果过多。可以使用了<code>^</code>和<code>$</code>正则符号，分别表示匹配单词首部和尾部。</p><h2 id="apt和apt-get的区别" tabindex="-1">apt和apt-get的区别 <a class="header-anchor" href="#apt和apt-get的区别" aria-label="Permalink to &quot;apt和apt-get的区别&quot;">​</a></h2><p>Advanced Package Tool，又名apt-get，是一款适用于Unix和Linux系统的应用程序管理器。apt-get最初于1998年发布。</p><p>apt 命令行实用程序于2014年推出第一个稳定版本，用于 Debian 发行版 .deb 软件包安装。它最初在不稳定的Debian版本中使用，然后在Debian 8中成为标准。</p><p>在 Ubuntu 16.04 发行后，apt 开始流行，并以某种方式取代了 apt-get 。</p><p>所以，目前推荐使用atp，弃用apt-get。</p>`,18),n=[e];function h(l,d,k,o,r,c){return i(),a("div",null,n)}const F=s(p,[["render",h]]);export{g as __pageData,F as default};
