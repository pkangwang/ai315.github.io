import{_ as a,c as e,o as l,a2 as i}from"./chunks/framework.84TDCN6B.js";const P=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Knowledge Fragments/区块链.md","filePath":"Knowledge Fragments/区块链.md"}'),p={name:"Knowledge Fragments/区块链.md"},t=i('<p>区块链技术正引领新一轮技术革新，逐步成为新一代重要的信息基础设施之一。</p><h2 id="区块链是什么" tabindex="-1">区块链是什么？ <a class="header-anchor" href="#区块链是什么" aria-label="Permalink to &quot;区块链是什么？&quot;">​</a></h2><p>区块链本质是是一种分布式的共享账本技术，它同时涉及数学、密码学、网络、编程等多学科的技术。</p><p>从区块链的开放程度来看，有三种类型：</p><ul><li>公有链</li><li>联盟链</li><li>私有链</li></ul><h2 id="比特币是什么" tabindex="-1">比特币是什么？ <a class="header-anchor" href="#比特币是什么" aria-label="Permalink to &quot;比特币是什么？&quot;">​</a></h2><p>比特币由英Bitcoin翻译而来，也叫作BTC。由神秘的日本人中本聪在2008年11月1日提出，本质是是一种点对点的电子现金系统。</p><p>所谓点对点是指，交易不需要中心化的机构，人与人之间直接进行交易。</p><p>比特币网络是一个分布式网络，有分散在世界各地的网络参与者（“矿工”）共同维护，相当于去中心化的大账本。矿工通过计算数学答案争取记账的权利，并获得系统的一定量的比特币奖励。</p><h2 id="区块链是怎么组成的" tabindex="-1">区块链是怎么组成的？ <a class="header-anchor" href="#区块链是怎么组成的" aria-label="Permalink to &quot;区块链是怎么组成的？&quot;">​</a></h2><p>区块链，顾名思义，由区块组成的链。这条链就好像一个大账本，每个区块就是账本中的一页，一个区块可以包含若干条交易记录。</p><p>区块是一种数据结果，每个区块包括区块头和块身体。</p><p>区块头一般会包含前一个区块头的哈希（Hash）值、默克尔（Merkle）根、时间戳三部分。前一个区块头的哈希即前块哈希，是上一个区块经过Hash算法生成的哈希值，可以确保上一页账目内容的不可窜改性，因为哪怕更改一个字符，这个哈希值就会完全不一样。时间戳意味着这个区块打包的交易信息是在时间戳表示的时间之前发生的。</p><p>交易信息通常以默克尔树的方式记录，记录着当前区块的交易细节，例如每笔交易的转出方、转入方、金额、转出方的数字签名，这些是区块的主要内容。</p><p>另外，区块中还包含交易计数器，表示每个区块的交易数量。</p><h2 id="区块如何连接成区块链" tabindex="-1">区块如何连接成区块链？ <a class="header-anchor" href="#区块如何连接成区块链" aria-label="Permalink to &quot;区块如何连接成区块链？&quot;">​</a></h2><p>以比特币为例，矿工在生成新区块时，需要根据前一个区块的哈希值、当前区块的交易数据及难度目标等信息，来计算当前区块的随机数。也就是说，每个区块都是在前一个区块的基础上生成的。由于哈希算法的准确性，矿工无法作弊，所有成功生成的区块形成链式结构，就是区块链。</p><h2 id="什么是区块高度" tabindex="-1">什么是区块高度？ <a class="header-anchor" href="#什么是区块高度" aria-label="Permalink to &quot;什么是区块高度？&quot;">​</a></h2><p>区块高度是指区块链上的区块数量。第一个区块叫创世区块，它的区块高度是0，之后每个区块依次生成，区块高度加1。截止2020年5月12日，比特币区块链高度为630000，也就是说，该区块链已经有63万个区块。</p><h2 id="什么是区块链的地址" tabindex="-1">什么是区块链的地址？ <a class="header-anchor" href="#什么是区块链的地址" aria-label="Permalink to &quot;什么是区块链的地址？&quot;">​</a></h2><p>区块链的地址由公钥、私钥、数字签名进行配合，用于实现区块链的价值所有权。地址是由公钥采用特定的哈希算法得到的，这种算法不可逆，无法破解，地址就相当于你的银行卡号。地址看上去是由一串字母和数字组成的26-34位字符串。你可以根据地址查到转账记录。</p><p>地址是可以公开的，而且只有公开给别人才能给你转账，但是私钥是一定不能泄露的，也不要存放在任何网络服务器或任何云笔记中，因为这一旦泄露，就相当于把银行卡密码给了别人。推荐的做法是写在你自己的笔记本上然后找个保险的地方存放起来。同样地，你也不可以遗失你的私钥，一旦遗失，你将无法使用你的账户，那么你账户上面的金额就无法使用了。</p><h2 id="什么是助记词" tabindex="-1">什么是助记词？ <a class="header-anchor" href="#什么是助记词" aria-label="Permalink to &quot;什么是助记词？&quot;">​</a></h2><p>如果你看过私钥，就会发现这串字符很难在短时间内记住，这时候助记词就派上用场了。助记词是未经加密的私钥，一般有12个、15个、18个、21个单词组成，目的是帮助用户记忆复杂的私钥。用户只要输入助记词，就能使用钱包中的部分功能。</p><h2 id="哈希算法的特点" tabindex="-1">哈希算法的特点 <a class="header-anchor" href="#哈希算法的特点" aria-label="Permalink to &quot;哈希算法的特点&quot;">​</a></h2><p>哈希函数，也叫散列函数，是一种信息摘要方法，它有如下特点：</p><ul><li>固定长度：无论数据长度多大，它总是可以计算为特定长度的字符串，一般为24位、32位、64位或128位。</li><li>快速性：无论数据长度多大，它总是可以非常快速的得到这个哈希值，通常在1秒以内。</li><li>单向性：通过哈希值，无法得到任何原始内容。举个形象的例子，哪怕是集合全球的算力，也需要花费上几百年的时间日夜不停的计算，也只有极低的概率得到原始内容，显然没有人会这样干。</li><li>确定性：同样的原始内容通过同样的哈希函数，一定会得出同样的哈希值。这里的内容相同指的是字节层面的相同，而不仅仅是看上去一样。</li><li>输入输出没有规律：哪怕是非常相似的两个原始内容，通过同样的哈希函数，得到的哈希值也完全不同。</li><li>不可猜测：通过一串哈希值，不可能猜测出原始内容的任何信息。</li></ul><p>正是由于哈希算法强大的确定性，才可以作为信息加密的可靠保障，哈希算法也是网络安全的基石。现代HTTPS协议、ssh协议、ssl协议都用到了哈希算法。</p><h2 id="什么是非对称加密算法" tabindex="-1">什么是非对称加密算法？ <a class="header-anchor" href="#什么是非对称加密算法" aria-label="Permalink to &quot;什么是非对称加密算法？&quot;">​</a></h2><ul><li>对称加密算法：在加密和解密时使用同一个密钥，这种算法不安全，几乎不再使用了。</li><li>非对称加密算法：通过密钥算法同时一对密钥：公钥和私钥，分别用于加密和解密。目前在各大安全协议中被使用。</li></ul><p>假设网络上的两台主机A和B需要传递信息。那么A和B首先生成自己的私钥和公钥。公钥和私钥都是一个文本文件，里面存放着一定长度的字符串，默认放在如下目录： 私钥：~/.ssh/id_rsa 公钥：~/.ssh/id_rsa.pub</p><p>公钥顾名思义就是可以公开的，A和B首先把自己的公钥发给对方，然后把对方的的公钥追加进自己的~/.ssh/known_hosts文件中，这个文件存放的是从网络上接收到的各个主机的公钥，每条信息占一行，每一行的格式如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>主机名  加密算法   公钥字符串</span></span></code></pre></div><p>现在A要跟B发送信息，A就使用B的公钥将原始信息加密，得到一条加密信息通过网络发送给B，由于原始信息是通过B的公钥加密的，那么加密信息只能通过B的私钥解密，A的公钥私钥、B的公钥、其它网络上任何人的公钥私钥都无法解密这条加密信息。B收到后通过自己的私钥成功界面，就看到了原始信息。在这个过程中，哪怕加密信息被别人截取到了，也无法解密。</p><p>总而言之，公钥是用来加密的，私钥是用来解密的。要给对方发送消息，就用对方的公钥加密，等信息到达对方主机后，对方就可以解密了。</p><p>非对称秘钥有几个特点：</p><ul><li>全局唯一：不同的人在同一时间，或同一个人在不同时间生成公钥私钥一定是不同的。也就是说，每个人的私钥一定是不同的，这确保了身份的准确性。</li><li>一对一：公钥和私钥是成对生成的，用公钥加密的信息只能通过对应的私钥解密，其它私钥绝对不可能解密。</li><li>确定性：用对应的私钥一定能解密，不用对应的私钥一定不能解密。</li></ul><p>现在，又有一个问题，如何保证这条加密信息是由a发出来的？换句话说，C也可以生成一对公私钥，发送给B，然后对B说：“我是A，这是我的公钥”。</p><p>这种问题的漏洞在于，每个人都可以生成公钥私钥，但无法根据识别身份。这个时候，有一个第三方的权威机构，A向这家机构发动自己的公钥以及能够证明身份的信息（例如营业执照），完成自己在网络上的“实名认证”。这家权威机构在核实了A的信息和公钥之后，颁发给A一张数字证书，这家机构也叫数字证书颁发机构。有了权威机构的背书，任何人也无法冒充A了，因为现在人们获取公钥都直接从权威机构获取。</p><p>现在，A要向B发生信息，首先使用B的公钥加密原始信息，然后再用自己（A）的私钥再进行一道加密，这个过程就是数字签名。B收到加密信息后，首先向第三方权威机构获取A的公钥，然后使用A的公钥进行第一级解密，再用自己（B）的的私钥进行二级解密，就获取了原始信息。</p><p>数字证书颁发机构的作用就是完成公钥信息的“实名制”。</p><p>第一级加密和数字签名是对称的：</p><ul><li>第一级加密使用对方的公钥加密</li><li>第二级数字签名使用自己的私钥加密</li><li>收到信息后，首先向数字证书颁发机构获取发送方的公钥，完成数字签名信息的解密</li><li>然后使用自己的私钥解密出原始信息。</li></ul><p>总之，原始信息加密解密的方式是：接收的公钥加密，接收方的私钥解密。数字签名的加密解密方式是：发送方的私钥加密，发送到的公钥解密。</p><h2 id="什么是分布式记账" tabindex="-1">什么是分布式记账？ <a class="header-anchor" href="#什么是分布式记账" aria-label="Permalink to &quot;什么是分布式记账？&quot;">​</a></h2><p>区块链的本质是分布式记账。A给B转账100元，银行需要记录这笔转账事实，然后变更各自的账户金额。分布式记账的方式是，大家手上都有一个小账本，每个人都记录这笔转账事实，如果一个人篡改了信息，也是无效的，因为绝大多数人的账本无法修改。对应到区块链上，大多数网络节点都通过一定的数据结构记录了这笔交易事实，哪怕有小部分节点想篡改记录，也是不会生效的，除非有能力改掉大部分的节点，但这是不可能的，这就是分布式的好处：不受单一节点的故障或有意作恶的影响。</p><h2 id="什么是公示机制" tabindex="-1">什么是公示机制？ <a class="header-anchor" href="#什么是公示机制" aria-label="Permalink to &quot;什么是公示机制？&quot;">​</a></h2><p>区块链是分布式系统，如何保证所有节点的数据完全相同并且对某个提案达成一致？这涉及到“这次听谁的”问题。目前主流的共识机制有：</p><ul><li>工作量证明（Proof of Work，PoW）</li><li>权益证明（Proof of Stake，PoS）</li><li>委托权益证明（Delegated Proof of Stake，DPoS）</li></ul><p><strong>工作量证明机制</strong></p><p>简单理解为你做过一定量的工作证明。例如比特币挖矿，每次系统出一道题目，例如：以刚刚新发生的几条交易信息为基础，加入一个随机数，生成一个哈希值，要求这个哈希值的前8位均为0。然后，矿工们不断的调整随机数去计算哈希，谁最先满足条件，谁就完成了一定难度的工作量，其它矿工就停止计算，以这个人的记录为准，然后等待下次计算，系统还会给予这个矿工一定的奖励。这里的8即位难度系数，目前，难度系数是逐渐增加的，例如要求更多的前几位均为0。</p><p><strong>权益证明机制</strong></p><p>权益证明也叫股权证明，类似于把资产存在银行里，银行会通过持有资产的数量和时间给你分配响应的收益。同理，对于数字资产，系统会根据你的货币量和持币时间计算出年龄，然后分配权益。币龄的计算公式为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>币龄  =  持币数量  X  持币时间</span></span></code></pre></div><p>通俗点说，就是“谁的币多，谁持币的年龄长，就听谁的”。</p><p><strong>委托权益证明</strong></p><p>dpos类似与董事会投票，持币者通过投票选出“董事会成员”，用于记账。</p><p>dpos有点像议会制度，当代表某次不能履行职责时，他们没有完成则会被除名，系统会选出新的节点来取代他们。</p><h2 id="什么是拜占庭将军问题" tabindex="-1">什么是拜占庭将军问题？ <a class="header-anchor" href="#什么是拜占庭将军问题" aria-label="Permalink to &quot;什么是拜占庭将军问题？&quot;">​</a></h2><p>拜占庭帝国想要进攻一个强大的敌国，为此派出了10支军队去包围敌国。这个敌国虽然不如拜占庭敌国强大，但也足以抵御5支常规拜占庭军队的同时袭击。基于一些原因，这10支军队不能集合在一起集中进攻。然而，他们任意一支军队单独进攻都毫无胜算，除非有6支军队同时袭击才能攻下敌国。他们分散在敌国的四周，依靠信使通信来协商进攻方式及时间。困扰这些将军的问题是：他们不确定其中是否有叛徒，叛徒可能擅自变更进攻方式或时间。这种情况下，拜占庭将军们能否找到一种分布式的协议让他们能够远程协商，从而赢得胜利？</p><p>这个问题是在区块链网络存在“作恶节点”的情况下，各个节点如何协商并达成共识。</p><p>拜占庭将军问题存在40几年以来，人们提出了很多解决办法，包括实用拜占庭容错（PBFT）算法，但是目前并没有找到有效的方法解决这个问题。在点对点式数字货币系统比特币里，比特币网络的运作是平行的（parallel）。各节点与终端都运算著区块链来达成工作量（PoW）。工作量证明的链接是解决比特币系统中拜占庭问题的关键，避免有问题的节点破坏数字货币系统里交易帐的正确性，是对整个系统的运行状态有着重要的意义。</p><h2 id="什么是智能合约" tabindex="-1">什么是智能合约？ <a class="header-anchor" href="#什么是智能合约" aria-label="Permalink to &quot;什么是智能合约？&quot;">​</a></h2><p>智能合约由密码学家尼克 · 萨博提出，它允许在无第三方的情况下进行可信的、可追踪的、不可逆转的交易。</p><p>举个例子，在租房场景中，违约的情况是非常多的，例如房东和租客签订了一份智能合约，房东和租客就可以把押金锁定在其中，如果租客按期离去，则押金会自动转到租客的地址中；如果租客违约，则押金会被自动扣除并转给房东。</p><h2 id="公有链、联盟链、私有链" tabindex="-1">公有链、联盟链、私有链 <a class="header-anchor" href="#公有链、联盟链、私有链" aria-label="Permalink to &quot;公有链、联盟链、私有链&quot;">​</a></h2><ul><li>公有链：公共拥有，不属于任何个人和机构，人人可自由加入和退出</li><li>联盟链：由一个或多个机构共同管理的区块链。只有联盟成员才能加入网络，且内部权限设计复杂，需要按照规定指定用户在链上的读写权限和记账权限。比较知名的联盟链有Fabric、企业以太坊等。</li><li>私有链：属于特定机构的定制化区块链，一般在机构内部使用，由所有者维护和管理，主要用于内部审计。</li></ul><h2 id="什么是去中心化应用dapp" tabindex="-1">什么是去中心化应用dapp？ <a class="header-anchor" href="#什么是去中心化应用dapp" aria-label="Permalink to &quot;什么是去中心化应用dapp？&quot;">​</a></h2><p>传统应用的后端在中心化的服务器上运行，去中心化应用的后端代码在去中心化的网络运行。目前流行的开发平台有以太坊和EOS。</p><h2 id="什么是通证" tabindex="-1">什么是通证？ <a class="header-anchor" href="#什么是通证" aria-label="Permalink to &quot;什么是通证？&quot;">​</a></h2><p>通证英文token，是加密的数字凭证。使用另了密码学来保证真实性和防篡改性。</p><ul><li>同质化通证：货币和资源是同质的，彼此之间可以替换。</li><li>非同质化通证：nft，是一种特定类型的数字资产，每个NFT都有唯一的标识符，使其与所有其它的NFT有所区别。</li></ul><h2 id="什么是超级账本" tabindex="-1">什么是超级账本？ <a class="header-anchor" href="#什么是超级账本" aria-label="Permalink to &quot;什么是超级账本？&quot;">​</a></h2><p>超级账本hyperledger由Linux基金会于2015年发起的开源项目，可以帮助建立私人或联盟链，让更多企业用上区块链。</p><p>fabric是hyperledger的子项目，由ibm公司开发，它是专为企业设计的企业级联盟链基础设施。</p><h2 id="什么是ipfs" tabindex="-1">什么是IPFS？ <a class="header-anchor" href="#什么是ipfs" aria-label="Permalink to &quot;什么是IPFS？&quot;">​</a></h2><p>中文名星际文件系统，是一种分布式存储协议。与HTTP的区别是：</p><ul><li>HTTP基于URL解析</li><li>IPFS基于内容寻址</li></ul><p>做个类比，把寻址比作在茫茫人海中找到你，HTTP是通过你的常住地址定位到你，而IPFS是将你的过往履历压缩成一小段文字，通过一小段文字定位到你。</p><h2 id="什么是零知识证明" tabindex="-1">什么是零知识证明？ <a class="header-anchor" href="#什么是零知识证明" aria-label="Permalink to &quot;什么是零知识证明？&quot;">​</a></h2><p>零知识证明是指证明者能够在不向验证者提供基本信息的情况下，使验证者相信某个论断是真实可信的一种技术。</p><p>举个例子，A要向B证明自己拥有某个房间的钥匙，要两种方法：</p><ul><li>方法一：A把钥匙交给B，B去开锁，从而证明A有这个房间的钥匙</li><li>方法二：A自己去打开房间，从房间拿一样东西给B，B知道这个物体确实只有这个房间有，从而证明了A拥有这个房间的钥匙。 方法二就是零知识证明。</li></ul>',83),o=[t];function r(s,h,n,d,c,u){return l(),e("div",null,o)}const q=a(p,[["render",r]]);export{P as __pageData,q as default};
