import{_ as a,c as e,o as t,a2 as s}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Dart/Dart库和元数据.md","filePath":"Dart/Dart库和元数据.md"}'),p={name:"Dart/Dart库和元数据.md"},i=s('<h2 id="dart库" tabindex="-1">Dart库 <a class="header-anchor" href="#dart库" aria-label="Permalink to &quot;Dart库&quot;">​</a></h2><p>一个文件可以被当做一个库。有时候一个功能需要分散在多个文件里面写，再由一个文件导入，这个文件夹叫做包，这个主文件叫做入口文件。那么将这些文件放入一个文件夹，主main.dart只需要导入这个入口文件即可。</p><p>导入单个文件，只需要使用相对路径即可。例如main.dart是主程序，person.dart是需要导入的文件，这个文件在同一个目录下，只需要使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import  &#39;person.dart&#39;;</span></span></code></pre></div><p>在大型项目中，需要导入第三方库，</p><p>导入以后，就可以直接使用里面定义好的变量。</p><p>如果有命名冲突，使用as 起个别名。</p><p>自定义库：dart文件的相对路径即可。</p><p>系统内置库，例如 import &quot;dart:io&quot;</p><p>对于第三方库先在pubspec.yaml文件添加，使用pab get 下载到本地。</p><p>下载单个库：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>flutter packages get dio</span></span></code></pre></div><p>下载pubspec.yaml文件dependencies列出的所有依赖：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pub get</span></span></code></pre></div><p>然后import，最好起个别名，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import &#39;package:dio/dio.dart&#39; as dio;</span></span></code></pre></div><h2 id="元数据" tabindex="-1">元数据 <a class="header-anchor" href="#元数据" aria-label="Permalink to &quot;元数据&quot;">​</a></h2><p>元数据是描述其它数据的数据。元数据以@开头。</p><ul><li>@override 重写</li><li>@proxy 代理</li><li>@required参数必传值</li><li>@deprecated</li></ul><p>@override是最频繁的就是build方法，flutter一切皆为组件，重写build方法就可以重新渲染组件。</p>',20),o=[i];function r(n,d,l,c,h,u){return t(),e("div",null,o)}const m=a(p,[["render",r]]);export{g as __pageData,m as default};
