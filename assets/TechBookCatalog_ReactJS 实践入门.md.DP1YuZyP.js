import{_ as l,c as i,o as e,a2 as t}from"./chunks/framework.84TDCN6B.js";const J=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"TechBookCatalog/ReactJS 实践入门.md","filePath":"TechBookCatalog/ReactJS 实践入门.md"}'),a={name:"TechBookCatalog/ReactJS 实践入门.md"},o=t('<p><img src="https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/235280/36/4541/61048/6567e822Fb763597e/93ffebc91b2447ce.jpg!q80.dpg.webp" alt=""></p><ul><li>第1章 Hello,World！ <ul><li>1.1 在没有工具链的情况下如何使用React</li><li>1.2 使用Create React App和JSX创建交互式“Hello,World”应用程序</li><li>1.3 本章小结</li></ul></li><li>第2章 React基础 <ul><li>2.1 React名称的由来</li><li>2.2 UI层</li><li>2.3 虚拟DOM</li><li>2.4 React的原理 <ul><li>2.4.1 关于组件</li><li>2.4.2 组合与继承</li><li>2.4.3 React是声明式的</li><li>2.4.4 React是惯用语</li><li>2.4.5 为什么要学习React</li><li>2.4.6 React与其他框架的比较</li><li>2.4.7 React不是什么</li></ul></li><li>2.5 本章小结</li></ul></li><li>第3章 JSX <ul><li>3.1 JSX不是HTML</li><li>3.2 什么是JSX <ul><li>3.2.1 JSX的工作方式</li><li>3.2.2 转译器</li></ul></li><li>3.3 JSX的语法基础 <ul><li>3.3.1 JSX是JavaScript XML</li><li>3.3.2 避免使用保留字</li><li>3.3.3 JSX使用驼峰式命名法</li><li>3.3.4 为DOM元素中的自定义属性加上data-前缀</li><li>3.3.5 JSX布尔属性</li></ul></li><li>3.3.6 使用花括号包含JavaScript字面量 <ul><li>3.3.7 何时在JSX中使用JavaScript</li><li>3.3.8 JSX中的条件</li><li>3.3.9 JSX中的表达式</li><li>3.3.10 在JSX中使用子元素</li><li>3.3.11 React Fragment</li></ul></li><li>3.4 本章小结</li></ul></li><li>第4章 组件 <ul><li>4.1 什么是组件</li><li>4.2 组件和元素 <ul><li>4.2.1 组件定义元素</li><li>4.2.2 元素调用组件</li></ul></li><li>4.3 内置组件 <ul><li>4.3.1 HTML元素组件</li><li>4.3.2 Attributes和Props</li><li>4.4 用户定义的组件</li></ul></li><li>4.5 组件类型 <ul><li>4.5.1 类组件</li><li>4.5.2 逐步了解React类</li><li>组件</li><li>4.5.3 函数组件</li><li>4.5.4 函数组件和类组件的</li><li>区别</li></ul></li><li>4.6 React子组件 <ul><li>4.6.1 this.props.children</li><li>4.6.2 Children的用法</li></ul></li><li>4.7 组件的生命周期 <ul><li>4.7.1 挂载</li><li>4.7.2 更新</li><li>4.7.3 卸载</li><li>4.7.4 错误处理</li><li>4.7.5 提高性能并避免错误</li></ul></li><li>4.8 渲染组件 <ul><li>4.8.1 用ReactDOM渲染</li><li>4.8.2 虚拟DOM</li><li>4.8.3 其他渲染引擎</li></ul></li><li>4.9 组件的术语</li><li>4.10 本章小结</li></ul></li><li>第5章 React DevTools <ul><li>5.1 安装和入门</li><li>5.2 检查组件 <ul><li>5.2.1 使用组件树</li><li>5.2.2 搜索组件</li><li>5.2.3 筛选组件</li><li>5.2.4 选择组件</li></ul></li><li>5.3 在DevTools中编辑组件数据</li><li>5.4 使用额外的DevTools功能</li><li>5.5 性能分析</li><li>5.6 本章小结</li></ul></li><li>第6章 React数据流 <ul><li>6.1 单向数据流 <ul><li>6.1.1 理解单向数据流</li><li>6.1.2 为什么使用单向数据流</li></ul></li><li>6.2 Props <ul><li>6.2.1 组件接收Props</li><li>6.2.2 Props可以是任何数据类型</li><li>6.2.3 Props是只读的</li><li>6.2.4 使用PropType验证传入的Props</li><li>6.2.5 默认Props</li></ul></li><li>6.3 ReactState <ul><li>6.3.1 什么是state</li><li>6.3.2 初始化state</li><li>6.3.3 state和props的区别</li><li>6.3.4 更新状态</li><li>6.3.5 状态中应包含的内容</li><li>6.3.6 构建Reminders应用程序</li><li>6.3.7 状态中不应包含的内容</li><li>6.3.8 放置状态的位置</li><li>6.3.9 状态提升</li><li>6.3.10 关于key Prop</li><li>6.3.11 筛选提醒</li><li>6.3.12 实现isComplete更改功能</li></ul></li><li>6.4 转换为类组件</li><li>6.5 本章小结</li></ul></li><li>第7章 事件 <ul><li>7.1 React中事件的运行机制</li><li>7.2 什么是SyntheticEvent</li><li>7.3 使用事件侦听器属性</li><li>7.4 Event对象</li><li>7.5 支持的事件</li><li>7.6 事件处理函数 <ul><li>7.6.1 编写内联事件处理程序</li><li>7.6.2 在函数组件中编写事件处理程序</li><li>7.6.3 在类组件中编写事件处理程序</li><li>7.6.4 绑定事件处理程序函数</li><li>7.6.5 将数据传递给事件处理程序</li></ul></li><li>7.7 本章小结</li></ul></li></ul>',2),c=[o];function u(s,r,p,_,S,n){return e(),i("div",null,c)}const d=l(a,[["render",u]]);export{J as __pageData,d as default};
