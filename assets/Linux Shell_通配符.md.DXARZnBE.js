import{_ as s,c as e,o as t,a2 as a}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/通配符.md","filePath":"Linux Shell/通配符.md"}'),i={name:"Linux Shell/通配符.md"},l=a(`<ul><li><code>*</code> 匹配任意数量的字符</li><li><code>?</code> 字符占位，表示有且只有一个字符</li><li><code>[]</code>，匹配其中的任何一个单字符</li><li><code>{str1,str2}</code>，匹配以逗号分隔，匹配其中的任何一个单词</li></ul><p>通配符在命令行中用的非常多。</p><p>例如，输出以.txt的文件名：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ls  *.txt</span></span></code></pre></div><p>使用连字符指定范围，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ list file[1-3].txt</span></span>
<span class="line"><span>file1.txt file2.txt file3.txt</span></span></code></pre></div><p>使用单个字符组成的逻辑或分组，例如如下命令表示匹配以file开头，紧接着以A或B或C结尾的文本文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ls file[ABC].txt</span></span>
<span class="line"><span>fileA.txt fileB.txt fileC.txt</span></span></code></pre></div><p>有时候需要用到字符串组成的逻辑或分组，这时候就用到了花括号。例如如下命令表示筛选以txt或md结尾的文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ls *.{txt,md}</span></span></code></pre></div>`,10),p=[l];function n(c,o,d,h,r,u){return t(),e("div",null,p)}const v=s(i,[["render",n]]);export{g as __pageData,v as default};
