import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.84TDCN6B.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/重定向.md","filePath":"Linux Shell/重定向.md"}'),e={name:"Linux Shell/重定向.md"},h=t(`<h2 id="输出重定向" tabindex="-1">输出重定向 <a class="header-anchor" href="#输出重定向" aria-label="Permalink to &quot;输出重定向&quot;">​</a></h2><p>使用&gt; 符号将左边本来应该输出到终端的内容重定向到文件，例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.txt</span></span></code></pre></div><p>不过这会覆盖1.txt本来的内容，有些时候我们只是想追加输出到现有文件的末尾，而不是覆盖，则可以使用&gt;&gt;符号：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   &gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.txt</span></span></code></pre></div><h2 id="输入重定向" tabindex="-1">输入重定向 <a class="header-anchor" href="#输入重定向" aria-label="Permalink to &quot;输入重定向&quot;">​</a></h2><p>输入重定向和输出重定向正好相反。输入重定向会将文件的内容重定向至命令，例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wc &lt; file.txt</span></span>
<span class="line"><span>2 8 56</span></span></code></pre></div><h2 id="将输出和错误定向到不同文件" tabindex="-1">将输出和错误定向到不同文件 <a class="header-anchor" href="#将输出和错误定向到不同文件" aria-label="Permalink to &quot;将输出和错误定向到不同文件&quot;">​</a></h2><ul><li>正确输出： 使用 <code>&gt;</code> 或 <code>&gt;&gt;</code></li><li>错误输出： 使用 <code>2&gt;</code> 或 <code>2&gt;&gt;</code></li><li>正确和错误合在一起输出： <code>&amp;&gt;</code></li></ul><p>现在，当前目录中，1.txt存在，2.txt不存在，运行如下命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  cat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.txt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  sure.md</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  error.md</span></span></code></pre></div><p>上述命令把1.md的文件拷贝到sure.md。而由于2.md不存在，所以读取出错，会把错误信息“no such file...”输出到error.md。</p><p>如下命令将正确和错误发送到同一文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  cat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> out.txt</span></span></code></pre></div><p>&amp;符号在Linux中通常代表“所有”的意思，所以<code>&amp;&gt;</code>就表示融合<code>1&gt;</code>和<code>2&gt;</code>输出。</p><h2 id="丢弃输出——-dev-null" tabindex="-1">丢弃输出——/dev/null <a class="header-anchor" href="#丢弃输出——-dev-null" aria-label="Permalink to &quot;丢弃输出——/dev/null&quot;">​</a></h2><p>丢弃错误的输出，保留正确的输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ls 存在的文件.txt 不存在的文件.txt 2&gt;  /dev/null</span></span></code></pre></div><p>正确的错误的全都丢弃：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 存在的文件</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 不存在的文件</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null</span></span></code></pre></div><h2 id="多个命令组合重定向" tabindex="-1">多个命令组合重定向 <a class="header-anchor" href="#多个命令组合重定向" aria-label="Permalink to &quot;多个命令组合重定向&quot;">​</a></h2><p>可以使用多个命令组合重定向：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span></code></pre></div><p>pwd和ls依然会输出到屏幕，只会把date的结果保存到1.md。</p><p>可以使用括号，先在子shell中执行，然后重定向：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 1.md</span></span></code></pre></div>`,27),l=[h];function p(n,d,k,o,c,r){return a(),i("div",null,l)}const u=s(e,[["render",p]]);export{F as __pageData,u as default};
