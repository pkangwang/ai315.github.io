import{_ as e,c as t,o as a,a2 as s}from"./chunks/framework.84TDCN6B.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"React/react笔记.md","filePath":"React/react笔记.md"}'),p={name:"React/react笔记.md"},n=s(`<p>在定义的内容中（两组尖括号之内的叫内容），用到的变量要用花括号包裹。其它地方不需要</p><p>组件return后面返回一对尖括号包裹的内容，单行可不加圆括号包裹，多行需要加圆括号包裹</p><p>组件只能返回一个级别的元素，例如，不能直接返回三个同级别的<code>&lt;p&gt;</code>，而要用一个标签如<code>&lt;div&gt;&lt;/div&gt;</code>包裹。不过，也可以使用<code>&lt;React.Fragment&gt;&lt;/React.Fragment&gt;</code>包裹，还可以直接使用<code>&lt;&gt;&lt;/&gt;</code>包裹</p><p>通常来说，每个新的React应用程序的顶层组件都是App组件。</p><p>Store 对象</p><p>在组件中：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Store.getState()  : 得到状态</span></span>
<span class="line"><span>Store.Subscribe(()=&gt;{...}) // 一旦数据改变，就执行函数体中的操作</span></span>
<span class="line"><span>Store.dispatch({})  // 触发事件，在React中，事件叫Action，是JS对象</span></span></code></pre></div><p>在Store定义中：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>定义一个或多个Reducer()，形参：state，action</span></span>
<span class="line"><span>组合成rootReducer</span></span>
<span class="line"><span>createStore(rootReduce, 初始值)</span></span></code></pre></div>`,9),c=[n];function o(i,r,l,d,_,g){return a(),t("div",null,c)}const m=e(p,[["render",o]]);export{u as __pageData,m as default};
