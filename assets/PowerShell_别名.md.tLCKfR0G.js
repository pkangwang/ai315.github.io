import{_ as e,c as t,o as a,a2 as l}from"./chunks/framework.84TDCN6B.js";const _=JSON.parse('{"title":"别名","description":"","frontmatter":{},"headers":[],"relativePath":"PowerShell/别名.md","filePath":"PowerShell/别名.md"}'),i={name:"PowerShell/别名.md"},o=l('<h1 id="别名" tabindex="-1">别名 <a class="header-anchor" href="#别名" aria-label="Permalink to &quot;别名&quot;">​</a></h1><ul><li>Get-Alias 获取当前会话中的所有别名</li><li>New-Alias 创建新别名</li><li>Set-Alias 创建或更改别名</li><li>Remove-Alias 删除别名</li><li>Export-Alias 将一个或多个别名导出到文件</li><li>Import-Alias 将别名文件导入 PowerShell</li></ul><h1 id="获取内置别名" tabindex="-1">获取内置别名 <a class="header-anchor" href="#获取内置别名" aria-label="Permalink to &quot;获取内置别名&quot;">​</a></h1><p>Get-Alias</p><p>获取以p开头的别名：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Get-Alias -Name p*</span></span></code></pre></div><h1 id="创建别名" tabindex="-1">创建别名 <a class="header-anchor" href="#创建别名" aria-label="Permalink to &quot;创建别名&quot;">​</a></h1><p>New-Alias -Name gas -Value Get-AuthenticodeSignature</p><p>Set-Alias</p><h1 id="内置的常用别名" tabindex="-1">内置的常用别名 <a class="header-anchor" href="#内置的常用别名" aria-label="Permalink to &quot;内置的常用别名&quot;">​</a></h1><p>cat -&gt; Get-Content</p><p>cd -&gt; Set-Location</p><p>cp -&gt; Copy-Item</p><p>del -&gt; Remove-Item</p><p>dir -&gt; Get-ChildItem</p><p>echo -&gt; Write-Output</p><p>gc -&gt; Get-Content</p><p>gl -&gt; Get-Location</p><p>ls -&gt; Get-ChildItem</p><p>mv -&gt; Move-Item</p><p>rm -&gt; Remove-Item</p><p>sc -&gt; Set-Content</p><p>write -&gt; Write-Output</p><h1 id="具有参数的命令的备用名称" tabindex="-1">具有参数的命令的备用名称 <a class="header-anchor" href="#具有参数的命令的备用名称" aria-label="Permalink to &quot;具有参数的命令的备用名称&quot;">​</a></h1><p>可以将别名分配给 cmdlet、脚本、函数或可执行文件。 不能为命令及其参数分配别名。 例如，可以将别名分配给 Get-Eventlog cmdlet，但不能将别名分配给 Get-Eventlog -LogName System 命令。</p><p>这种情况的解决办法是：可以创建包含命令的函数。 若要创建函数，请键入单词“function”，后跟函数的名称。 键入命令，并将其括在大括号 ({}) 中。</p>',26),p=[o];function s(r,n,c,h,d,m){return a(),t("div",null,p)}const g=e(i,[["render",s]]);export{_ as __pageData,g as default};
