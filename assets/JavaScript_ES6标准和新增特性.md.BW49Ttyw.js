import{_ as t,c as e,o as a,a2 as o}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/ES6标准和新增特性.md","filePath":"JavaScript/ES6标准和新增特性.md"}'),r={name:"JavaScript/ES6标准和新增特性.md"},i=o('<h2 id="es6标准" tabindex="-1">ES6标准 <a class="header-anchor" href="#es6标准" aria-label="Permalink to &quot;ES6标准&quot;">​</a></h2><p>ECMAScript 标准自2015年以来每年6月会发布一个新版本。ECMAScript 的某个特性从想法到最终的标准一般会经历stage0——stage4 五个阶段，分别是：strawman（最初想法）、proposal（提案）、draft（草案）、candidate（候选）、finished（完成）。一般而言，一个提案一旦进入草案阶段就很有可能会纳入最终的标准。</p><p>在以前，从标准的发布到浏览器厂商的支持又会经历很长的时间，这时可以使用polyfill框架用于实现浏览器暂不支持的特性。不过现在这种情况已经得到了好转，甚至对于很多特性，往往是浏览器厂商率先推出，而后TC39委员会将其作为标准纳入。</p><h2 id="es6的新增特性" tabindex="-1">ES6的新增特性 <a class="header-anchor" href="#es6的新增特性" aria-label="Permalink to &quot;ES6的新增特性&quot;">​</a></h2><p>下面列出了自ECMAScript 2015 发布以来的新增特性：</p><ul><li><p><strong>ES6</strong>：发行于2015年6月，新增了许多影响深远的特性：箭头函数、模块、迭代器、生成器、期约、反射、代理。ES6的发布对于JavaScript来说是一个里程碑事件，这是经典JavaScript和现代JavaScript的分水岭，奠定了JavaScript繁荣的基础。之后的ES版本也可以统称为“ES6”。</p></li><li><p><strong>ES7</strong>：发布于2016年6月，新增了指数操作符。</p></li><li><p><strong>ES8</strong>：发布于2017年6月，<code>async/await</code>、<code>Object.values()/keys()/entries()</code>、对象字面量拖尾逗号。async和await又是现代JavaScript发展史上另外一个极其重要的特性。</p></li><li><p><strong>ES9</strong>：发布于2018年6月，新增了<code>Promise finally()</code>、异步迭代、剩余和扩展属性。</p></li><li><p><strong>ES10</strong>：发布于2019年6月，新增了数组打平、字符串定长填充等特性。</p></li><li><p><strong>ES11</strong>：发布于2020年6月，新增了可选链、空位合并等特性。</p></li><li><p><strong>ES12</strong>：发布于2021年6月，新增了<code>Promise any()</code>、<code>String.prototype.replaceAll()</code>等特性。</p></li><li><p><strong>ES13</strong>：发布于2022年6月，新增了顶层<code>await</code>、<code>Array.prototype.at()</code>、class私有方法 / 静态方法等特性。</p></li><li><p><strong>ES14</strong>：发布于2023年6月，主要新增了数组的非破坏性方法，例如<code>Array.prototype.toReversed()</code>、<code>Array.prototype.toSorted()</code>等</p></li></ul>',6),s=[i];function c(p,n,l,d,S,_){return a(),e("div",null,s)}const h=t(r,[["render",c]]);export{g as __pageData,h as default};
