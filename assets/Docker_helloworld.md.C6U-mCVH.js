import{_ as e,c as a,o as t,a2 as o}from"./chunks/framework.84TDCN6B.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Docker/helloworld.md","filePath":"Docker/helloworld.md"}'),l={name:"Docker/helloworld.md"},s=o('<h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker run -d p80:80 docker/getting-started</span></span></code></pre></div><ul><li>-d ：在后台运行容器</li><li>-p 80:8000 ：将容器内的端口映射到主机的8000端口</li><li>docker/getting-started ：要使用的镜像。如果本地不存在会自动从仓库拉取。</li></ul><h2 id="镜像和容器的概念区别" tabindex="-1">镜像和容器的概念区别 <a class="header-anchor" href="#镜像和容器的概念区别" aria-label="Permalink to &quot;镜像和容器的概念区别&quot;">​</a></h2><p>一个镜像只是一个压缩文件，这是一种模板，可以使用镜像实例化多个容器。一个容器表示具体的一个实例，有自己的生命周期，包括启动、停止、删除。</p><p>镜像好比操作系统安装文件，容器好比通过此文件安装到机器上并运行起来的操作系统。</p><p>再打个比方，镜像好比Java语言的类，容器好比通过类实例化出来的具体的对象。</p>',7),r=[s];function i(c,d,n,p,h,_){return t(),a("div",null,r)}const m=e(l,[["render",i]]);export{k as __pageData,m as default};
