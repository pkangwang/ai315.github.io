import{_ as e,c as s,o as p,a2 as a}from"./chunks/framework.84TDCN6B.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/查找文件内容——grep.md","filePath":"Linux Shell/查找文件内容——grep.md"}'),i={name:"Linux Shell/查找文件内容——grep.md"},l=a(`<p>格式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>grep 选项 pattern 文件范围</span></span></code></pre></div><p>选项：</p><ul><li>-v 反向匹配</li><li>-i 不区分大小写</li><li>-r 在目录中，递归搜索</li><li>-1 仅显示包含搜索文本的文件而不显示实际的行</li><li>--color 在每行中突出显示找到的文本</li><li>-n 显示行号</li><li>-c 显示匹配到了多少行</li><li>-e 使用多个-e选项指定多个匹配模式</li><li>-E 使用扩展正则</li></ul><p>文件范围可以是：</p><ul><li>单个文件</li><li>文件列表，用空格隔开</li><li>目录</li></ul><p>egrep 命令是 grep 的一个衍生，支持 POSIX 扩展正则表达式。</p><p>如下演示了grep的基础使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ grep -n t file1</span></span>
<span class="line"><span>2:two   # 搜索到了第2行</span></span>
<span class="line"><span>3:three   # 搜索到了第3行</span></span></code></pre></div><p>注意，如果patter中有空格，需要使用引号包裹。</p><p>使用正则：</p><p>在文件中搜索包含两个连续的p字母的字符串</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>grep -E p\\{2} file.txt</span></span></code></pre></div>`,13),t=[l];function n(c,o,r,d,_,h){return p(),s("div",null,t)}const v=e(i,[["render",n]]);export{u as __pageData,v as default};
