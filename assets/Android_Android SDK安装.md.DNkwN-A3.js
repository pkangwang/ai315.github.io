import{_ as o,c as t,o as s,a2 as l}from"./chunks/framework.84TDCN6B.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Android/Android SDK安装.md","filePath":"Android/Android SDK安装.md"}'),e={name:"Android/Android SDK安装.md"},i=l('<p><strong>第1步，设置ANDROID_HOME环境变量。</strong></p><p>首先，新建一个文件夹作为Android SDK的存放目录，例如：<code>D:\\android-sdk</code>。目录路径不要带有中文、空格，也不要在需要管理员权限的目录下创建。</p><p>然后，设置系统环境变量名<code>ANDROID_HOME</code>，其变量值为你刚刚新建的这个目录。</p><p>请注意，设置ANDROID_HOME环境变量这个步骤非常重要，Android SDK的许多工具都依赖于读取ANDROID_HOME这个变量，例如sdkmanager，如果读取不到这个变量，就会报错。后面安装的一些工具包也会放在ANDROID_HOME下。后面我们会频繁使用ANDROID_HOME。</p><p>然后，注销或重启电脑以使环境变量生效。</p><p><strong>第2步，下载命令行工具压缩包并解压。</strong></p><p>使用浏览器访问<a href="https://developer.android.google.cn/studio?hl=zh-cn" target="_blank" rel="noreferrer">https://developer.android.google.cn/studio?hl=zh-cn</a> 将页面拉到最底部，可以清晰地找到“仅限命令行工具”，根据平台下载对应的压缩包，这里我们选择Windows版本，压缩包体积应该在150MB左右。</p><p>然后解压，将解压出来的cmdline-tools文件夹放到ANDROID_HOME文件夹下。</p><p><strong>第3步，移动文件到合适的位置。</strong></p><p>经过了上述两步后，现在，你的ANDROID_HOME/cmdlines-tools应该有如下四个子文件或文件夹：</p><ul><li>bin</li><li>lib</li><li>NOTICE.txt</li><li>source.prolerties</li></ul><p>现在，在ANDROID_HOME/cmdlines-tools中新建一个名为latest的文件夹，将上面的四个文件移动到这里。</p><p>这一步是官方文档推荐的做法，目的是方便cmdline-tools版本的管理。</p><p>现在，你的ANDROID_HOME/cmdlines-tools/latest目录应该有如下4个子文件或文件夹：</p><ul><li>bin</li><li>lib</li><li>NOTICE.txt</li><li>source.prolerties</li></ul><p><strong>第4步，添加Path环境变量</strong></p><p>在系统的Path环境变量中添加条目：</p><ul><li><code>%ANDROID_HOME%\\cmdline-tools\\latest\\bin</code></li></ul><p>这是为了方便直接调用该文件夹下的sdkmanager.bat。sdkmanager.bat 用于查看、安装、更新和卸载 Android SDK 的软件包。</p><p><strong>第5步，安装所需的软件包。</strong></p><p>首先，使用如下命令列出已安装或可用的软件包及其版本：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager --list</span></span></code></pre></div><p>如果你手上有一部基于 Android13 的手机，且可以使用调试模式（近两年出的知名品牌的安卓手机应该都能满足），那么安装如下3个工具包即可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager &quot;build-tools;34.0.0&quot; &quot;platform-tools&quot; &quot;platforms;android-33&quot;</span></span></code></pre></div><p>这里对上面3个工具包的含义做一些解释：</p><ul><li>&quot;build-tools;34.0.0&quot; ： build工具，直接安装list列表中最高的那个版本即可，目前是34.0.0。</li><li>&quot;platform-tools&quot; ：平台工具，没有版本选择，直接写这个即可。</li><li>&quot;platforms;android-33&quot; ：注意，这里很重要。这里33的意思是安卓的API-Level。简单点说，Android13对应api33，Android14对应api44。要根据你调试时和目标人群手机的安卓版本合理选择。其它Android版本和api-level的对应关系请自行查找。</li></ul><p><strong>第6步，接受许可</strong></p><p>这个步骤容易被忽略，但却非常重要，使用如下命令接受许可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager --licenses</span></span></code></pre></div><p>系统会提示你接受所有尚未接受的许可。在每一次终端的询问中输入 y 就可以了。</p><p>第7步，添加path环境变量。</p><p>在系统的path环境变量中新增如下几项：</p><ul><li><code>%ANDROID_HOME%\\tools</code></li><li><code>%ANDROID_HOME%\\tools\\bin</code></li><li><code>%ANDROID_HOME%\\platform-tools</code></li></ul><p>注销或重启电脑以使环境变量生效。</p>',34),p=[i];function a(d,n,r,c,u,_){return s(),t("div",null,p)}const D=o(e,[["render",a]]);export{h as __pageData,D as default};
