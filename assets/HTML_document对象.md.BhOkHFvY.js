import{_ as e,c as t,o as l,a2 as i}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"HTML/document对象.md","filePath":"HTML/document对象.md"}'),o={name:"HTML/document对象.md"},c=i("<p>document对象有三大用途：</p><ul><li>获取和设置文档元信息： 如document.title、document.location。</li><li>查找元素： 使用“getElementBy”和“querySelector”系列方法查找元素，或者查找特定元素例如document.body。</li><li>创建元素。</li></ul><p>以下总结了document对象的大多数成员：</p><ul><li>activeElement： 当前获得焦点的对象。</li><li>body ： 返回body元素对象</li><li>characterSet： 返回文档的字符集编码。这是一个只读属性。</li><li>charset： 返回或设置文档的字符集编码。</li><li>childNodes： 返回子元素的集合</li><li>compatMode： 获取文档的兼容性模式。</li><li>cookie： 获取或设置当前文档的cookie。</li><li>defaultCharset： 获取浏览器使用的默认字符编码</li><li>defaultView： 返回文档的window对象。</li><li>dir：获取或设置文档的文本方向。</li><li>domain：获取或设置文档的域名。</li><li>embeds、plugins： 返回所有代表文档embeds元素的对象。</li><li>firstChild： 返回第一个子元素</li><li>forms： 返回文档中的form元素</li><li>getElementById(&quot;idName&quot;) : 返回指定id值的元素</li><li>getElementsByClassName(&quot;class&quot;) ：返回指定class值的元素对象，无论找到0个、1个还是多个，始终返回<code>HTMLCollection []</code>，这是一个类数组对象。</li><li>getElementsByName(&quot;name&quot;)：返回指定name值的元素，如果有多个，则返回数组。无论找到0个、1个还是多个，始终返回<code>NodeList []</code>对象，这是一个类数组对象。</li><li>getElementsByTagName(&quot;tag&quot;) ：返回带有指定tag的元素。无论找到0个、1个还是多个，始终返回<code>HTMLCollection []</code>类型的对象，这是一个类数组对象。</li><li>hasChildNodes()：如果当前元素有子元素则返回true。</li></ul><p><strong>document.writeln()</strong></p><p>该方法会使用传入的内容覆盖文档。请谨慎使用该方法。</p><p><strong>document.getElementsByTagName()</strong></p><p>该方法通过元素标签查找元素，一般会找到多个元素，返回的结果是HTMLElement对象组成的集合。得到这个集合后，可以使用for循环对每个找到的元素进行操作。</p>",8),d=[c];function n(a,s,m,r,u,_){return l(),t("div",null,d)}const f=e(o,[["render",n]]);export{g as __pageData,f as default};
