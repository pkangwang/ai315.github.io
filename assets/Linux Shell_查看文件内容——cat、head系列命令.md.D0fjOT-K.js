import{_ as s,c as i,o as a,a2 as t}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/查看文件内容——cat、head系列命令.md","filePath":"Linux Shell/查看文件内容——cat、head系列命令.md"}'),l={name:"Linux Shell/查看文件内容——cat、head系列命令.md"},h=t(`<p>查看文件内容的方式有很多，可以根据具体的情况选择，查看文件内容的命令汇总如下：</p><ul><li>cat | 最常用，正常显示文件内容</li><li>tac | 从最后一行开始显示</li><li>nl | 显示的时候，输出行号</li><li>more | 一页一页的显示</li><li>less | 于more类似，但可以往前翻页</li><li>head | 只看前面几行</li><li>tail | 只看后面几行</li><li>od | 以二进制的方式显示文件内容</li></ul><h2 id="cat命令" tabindex="-1">cat命令 <a class="header-anchor" href="#cat命令" aria-label="Permalink to &quot;cat命令&quot;">​</a></h2><p>最常用的cat命令的选项如下：</p><ul><li>-b | 对非空白行显示行号，空白行则不显示</li><li>-E | 将结尾的换行符<code>$</code>显示出来</li><li>-n | 显示行号，包括空白行</li><li>-v | 列出不可见的特殊字符</li></ul><p>与cat读取文件的全部内容不同，head和tail命令用于读取文件的前几行或最后几行，在部分情况下非常有用。</p><h2 id="head" tabindex="-1">head <a class="header-anchor" href="#head" aria-label="Permalink to &quot;head&quot;">​</a></h2><p>head命令的作用是读取文件内容的前多少行。使用head命令一般只使用-n选项，该选项指定要读取前面多少行。</p><p>例如，如果想输出前25行，下面三个命令是等价的：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span></code></pre></div><p>-n 后面也可以跟负数，表示出了最后几行剩下的全部内容。例如下面的命令输出除了最后5行以外的全部内容：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.txt</span></span></code></pre></div><h2 id="tail" tabindex="-1">tail <a class="header-anchor" href="#tail" aria-label="Permalink to &quot;tail&quot;">​</a></h2><p>与head相反，tail命令用于读取文件内容的后多少行。下面两个命令均读取文件最后10行。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span></code></pre></div><p>如果数字带加号，表示从第几行开始输出，例如从第一行开始输出，即全部输出：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   +1</span></span></code></pre></div><p>从第25行开始输出：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tail</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   +25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.md</span></span></code></pre></div>`,19),e=[h];function n(p,d,k,c,r,o){return a(),i("div",null,e)}const C=s(l,[["render",n]]);export{g as __pageData,C as default};
