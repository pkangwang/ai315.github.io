import{_ as e,c as l,o as t,a2 as i}from"./chunks/framework.84TDCN6B.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/网络请求——curl.md","filePath":"Linux Shell/网络请求——curl.md"}'),a={name:"Linux Shell/网络请求——curl.md"},s=i('<p>不带有任何参数时，curl就是发出GET请求。如果是网页会输出HTML源码到终端，如果是文件就会下载到当前目录，默认以URL的最后部分作为文件名：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>curl  链接</span></span></code></pre></div><ul><li>-o/--output 新文件名 ： 下载后重命名</li><li>-O 将服务器的响应保存为文件，并将URL的最后部分作为文件名。</li><li>-d “name=xxx” 指定get的query数据或post的body数据，可以连写多个 -d，也可以将多个参数用&amp;分隔</li><li>b用于设置Cookie，设置多个Cookie时，使用英文分号分隔</li><li>-F 用来向服务器上传文件，用法：file=@文件路径。</li><li>-G 用来构造URL的查询字符串，会发送GET请求。如果省略，则会发送post请求。</li><li>-i 用于打印服务器响应的HTTP相应头，然后空一行，再输出网页源码。</li><li>-X 用于指定HTTP请求的方法。大写</li></ul>',3),o=[s];function c(n,_,p,r,d,u){return t(),l("div",null,o)}const T=e(a,[["render",c]]);export{m as __pageData,T as default};
