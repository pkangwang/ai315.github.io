import{_ as a,c as e,o as s,a2 as n}from"./chunks/framework.84TDCN6B.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"MongoDB/增.md","filePath":"MongoDB/增.md"}'),t={name:"MongoDB/增.md"},i=n(`<h2 id="insertone" tabindex="-1">insertOne <a class="header-anchor" href="#insertone" aria-label="Permalink to &quot;insertOne&quot;">​</a></h2><p>insertOne函数的作用是插入单个文档。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&gt; zhangsan = {&#39;name&#39;:&#39;张三&#39;, &#39;age&#39;: 38}</span></span>
<span class="line"><span>&gt;  db.blog.users.insertOne(zhangsan)</span></span></code></pre></div><h2 id="insertmany" tabindex="-1">insertMany <a class="header-anchor" href="#insertmany" aria-label="Permalink to &quot;insertMany&quot;">​</a></h2><p>insertMany函数的作用是插入多个文档，传入一个包含多个文档的数组：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&gt; zhangsan = {&#39;name&#39;:&#39;张三&#39;, &#39;age&#39;: 38}</span></span>
<span class="line"><span>&gt; lisi = {&#39;name&#39;:&#39;李四&#39;, &#39;age&#39;: 36}</span></span>
<span class="line"><span>&gt;  db.blog.users.insertMany([zhangsan, lisi])</span></span></code></pre></div><h2 id="upsert" tabindex="-1">upsert <a class="header-anchor" href="#upsert" aria-label="Permalink to &quot;upsert&quot;">​</a></h2><p>upsert方法很特殊。根据查询条件，通常有两种情况：</p><ul><li>如果可以找到至少一个匹配的文档，则进行正常的更新。</li><li>如果找不到任何匹配的文档，则根据查询条件和更新文档创建一个新的文档。</li></ul>`,9),o=[i];function p(r,l,c,d,h,g){return s(),e("div",null,o)}const m=a(t,[["render",p]]);export{_ as __pageData,m as default};
