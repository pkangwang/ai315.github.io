import{_ as e,c as a,o as l,a2 as o}from"./chunks/framework.84TDCN6B.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"PowerShell/PowerShell环境变量.md","filePath":"PowerShell/PowerShell环境变量.md"}'),i={name:"PowerShell/PowerShell环境变量.md"},s=o('<h2 id="内置变量" tabindex="-1">内置变量 <a class="header-anchor" href="#内置变量" aria-label="Permalink to &quot;内置变量&quot;">​</a></h2><ul><li><code>$null</code> 代表空值，将<code>$null</code>赋值给变量表示只创建该变量，但是不赋值。</li><li><code>$LASTEXITCODE</code> 调用外部程序时，运行结束后会返回一个退出码，0表示成功，非0表示发生错误。</li><li><code>$?</code>，最近一个命令的执行状态，为0为成功执行。</li><li><code>$_</code> 在管道对象中包含当前对象，在迭代时表示每次的迭代值。</li><li><code>$Home</code> 此变量用于表示用户主目录的完整路径</li><li><code>$IsLinux</code> 如果当前会话在Linux操作系统上运行，则此变量值为<code>True</code>，否则为<code>False</code>。</li><li><code>$IsWindows</code> 如果当前会话在Windows操作系统上运行，则此变量值为True，否则为False。</li><li><code>$PID</code> 此变量显示进程的PID，该进程正在托管当前PowerShell的会话。</li><li><code>$PSHome</code> 此变量表示Windows PowerShell安装目录的完整路径。</li><li><code>$PSVersionTable</code> 此变量用于表示只读哈希表，该哈希表显示有关当前会话中运行的PowerShell版本的详细信息。</li><li><code>$PROFILE</code> powershell配置文件的路径</li></ul><h2 id="内置环境变量" tabindex="-1">内置环境变量 <a class="header-anchor" href="#内置环境变量" aria-label="Permalink to &quot;内置环境变量&quot;">​</a></h2><p>使用<code>Get-ChildItem Env:</code>列出所有环境变量和它们的值。</p><p>一些内置的环境变量：</p><ul><li><code>$env：path</code>，常用，执行脚本和二进制命令时按顺序搜索的目录。</li><li><code>$env:temp</code>或<code>$env：tmp</code> 临时文件路径</li><li><code>$env:USERPROFILE</code> 指定当前用户的个人文件夹的路径</li></ul><p>使用如下语法读取或修改：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$env:变量名</span></span></code></pre></div><p>这里的env和变量名都不区分大小写。</p><h2 id="读取和修改path环境变量" tabindex="-1">读取和修改PATH环境变量 <a class="header-anchor" href="#读取和修改path环境变量" aria-label="Permalink to &quot;读取和修改PATH环境变量&quot;">​</a></h2><p><code>$env:PATH</code> 环境变量包含操作系统搜索可执行文件的文件夹位置列表。 在 Windows 上，文件夹位置列表由分号 (😉 字符分隔。</p><p>修改path环境变量：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$env:path = &quot;$env:path;D:\\Program Files\\MyApp\\bin&quot;</span></span></code></pre></div><p>或者使用简洁语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$env:path += &quot;;D:\\Program Files\\MyApp\\bin&quot;</span></span></code></pre></div><p>这里有两点需要注意：</p><ol><li>应该用管理员权限打开powershell</li><li>修改完要注销或重启才能生效</li></ol><h2 id="新增和修改自定义环境变量" tabindex="-1">新增和修改自定义环境变量 <a class="header-anchor" href="#新增和修改自定义环境变量" aria-label="Permalink to &quot;新增和修改自定义环境变量&quot;">​</a></h2><p>首先获取powershell的配置文件路径，没有就新建一个：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>echo $profile</span></span></code></pre></div><p>在此文件中加入变量的声明，注销或重启即可。</p><h2 id="普通变量和环境变量的区别" tabindex="-1">普通变量和环境变量的区别 <a class="header-anchor" href="#普通变量和环境变量的区别" aria-label="Permalink to &quot;普通变量和环境变量的区别&quot;">​</a></h2><p>普通变量和自定义环境变量本质上都是变量，声明和使用的方式一模一样，这两者的区别主要在于生命周期的不同。</p><ul><li>普通变量是临时的，只在此次使用shell时有用，下次使用shell（注销或重启后）就不存在了。</li><li>环境变量包括内置的和自定义的，是永久可以使用的。</li></ul><p>是否要将普通变量永久保存，也就是变为环境变量，取决于自己的实际需求。一般而言，需要重读多次使用的变量应该提升为环境变量，少数几次使用的则使用普通变量即可。</p>',25),t=[s];function c(d,p,n,h,r,u){return l(),a("div",null,t)}const P=e(i,[["render",c]]);export{_ as __pageData,P as default};
