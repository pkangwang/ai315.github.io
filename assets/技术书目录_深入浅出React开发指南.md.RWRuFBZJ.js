import{_ as l,c as i,o as e,a2 as t}from"./chunks/framework.84TDCN6B.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"技术书目录/深入浅出React开发指南.md","filePath":"技术书目录/深入浅出React开发指南.md"}'),a={name:"技术书目录/深入浅出React开发指南.md"},c=t('<p><img src="https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/226577/20/11148/58939/6596d9e9F9469da32/8f7c54148daff3fa.jpg!q80.dpg.webp" alt=""></p><ul><li>第1章 邂逅React <ul><li>1.1 React 的优势分析</li><li>1.2 React发展历程</li></ul></li><li>第2章 了解JSX <ul><li>2.1 认识JSX</li><li>2.2 操作JSX</li><li>2.3 JSX转换Element对象流程</li><li>2.4 实践：可控性渲染</li><li>2.5 Babel解析JSX</li></ul></li><li>第3章 React组件 <ul><li>3.1 组件是什么</li><li>3.2 两种类型的组件</li><li>3.3 组件的通信方式</li><li>3.4 组件的设计模式</li><li>3.5 组件的继承</li><li>3.6 高阶组件（HOC）</li></ul></li><li>第4章 React 更新驱动 <ul><li>4.1 React 驱动源</li><li>4.2 React props</li><li>4.3 组合模式和render props模式</li><li>4.4 State 驱动 <ul><li>4.4.1 类组件setState介绍</li><li><strong>4.4.2 函数组件中的useState</strong> P67</li><li></li></ul></li><li>4.5 主流框架批量更新模式</li><li>4.6 两种模式下的State更新</li><li>4.7 外部数据源</li></ul></li><li>第5章 React 生命周期 <ul><li>5.1 生命周期介绍</li><li>5.2 类组件生命周期</li><li>5.3 类组件生命周期的作用</li><li><strong>5.4 函数组件生命周期替代方案</strong></li><li>5.5 实践：实现ScrollView组件</li></ul></li><li>第6章 React状态获取与传递 <ul><li>6.1 ref作用及应用场景</li><li>6.2 ref 使用及应用场景</li><li>6.3 Context 介绍</li><li>6.4 新老版本Context</li><li>6.5 Context 特性</li><li>6.6 Context 实现切换主题功能</li></ul></li><li>第7章 工程化配置及跨平台开发 <ul><li>7.1 React 环境搭建</li><li>7.2 CSS模块化</li><li>7.3 React 服务端渲染</li><li>7.4 React Native 跨平台开发</li></ul></li><li>第8章 React 架构设计 <ul><li>8.1 虚拟DOM与fiber <ul><li><strong>8.8.1 虚拟DOM</strong></li></ul></li><li>8.2 fiber架构</li><li>8.3 React 中的位运算</li><li>8.4 React 数据更新架构设计</li><li>8.5 React 事件系统设计</li></ul></li><li>第9章 高性能React <ul><li>9.1 React 内部更新调优</li><li>9.2 React 外部渲染机制</li><li>9.3 任务调度</li><li>9.4 过渡更新任务</li><li><strong>9.5 异步组件和懒加载</strong> P218 <ul><li>9.5.1 异步组件和Suspense</li><li>9.5.2 Suspense实现懒加载</li><li>9.5.3 Suspense和React.lazy原理实现</li><li>9.5.4 React V18 SuspenseList</li></ul></li><li>9.6 React 海量数据处理</li><li>9.7 React 使用细节处理</li><li>9.8 React 性能问题检测</li></ul></li><li>第10章 React 运行原理探秘 <ul><li>10.1 React 运行时总览</li><li>10.2 渲染阶段流程探秘</li><li>10.3 Commit 阶段流程探秘</li><li>10.4 State 更新探秘</li><li>10.5 Context 原理探秘</li><li>10.6 ref 原理揭秘</li><li>10.7 scheduler 异步调度原理</li><li>10.8 React 事件原理</li></ul></li><li>第11章 玩转React Hooks <ul><li>11.1 Hooks 概览 <ul><li>11.1.1 数据更细驱动</li><li>11.1.2 执行副作用</li></ul></li><li>11.2 Hooks 原理</li><li>11.3 自定义Hooks 设计</li><li>11.4 自定义Hooks 实践</li></ul></li><li>第12章 React-Router <ul><li>12.1 Spa 核心原理</li><li>12.2 新老版本路由设计</li><li>12.3 老版本路由原理</li><li>12.4 新版本路由原理</li><li>12.5 实践：从零到一实现路由系统</li></ul></li><li>第13章 React-Redux 状态管理工具 <ul><li>13.1 Redux <ul><li>13.1.1 Flux架构概念</li><li><strong>13.1.2 Redux 介绍</strong></li></ul></li><li>13.2 Redux 原理浅析</li><li>13.3 React-Redux 介绍及其原理</li></ul></li><li>第14章 React 实践 <ul><li>14.1 实现表单系统</li><li>14.2 弹窗设计与实践</li><li>14.3 Keepalive 功能的设计与实现</li></ul></li></ul>',2),u=[c];function s(o,R,r,n,_,p){return e(),i("div",null,u)}const f=l(a,[["render",s]]);export{S as __pageData,f as default};
