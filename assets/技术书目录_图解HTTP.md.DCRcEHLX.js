import{_ as l,c as i,o as T,a2 as e}from"./chunks/framework.84TDCN6B.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"技术书目录/图解HTTP.md","filePath":"技术书目录/图解HTTP.md"}'),t={name:"技术书目录/图解HTTP.md"},_=e('<p><img src="https://m.360buyimg.com/mobilecms/s750x750_jfs/t1/94513/17/45064/39573/650bad7dFda839cc6/710727adda16c21d.jpg!q80.dpg.webp" alt=""></p><ul><li>第1章 了解Web及网络基础 <ul><li>1.1 使用HTTP协议范围Web</li><li>1.2 HTTP的诞生</li><li>1.3 网络基础TCP/IP</li><li>1.4 与HTTP关系密切的协议：IP、TCP和DNS</li><li>1.5 负责域名解析的DNS服务</li><li>1.6 各种协议与HTTP协议的关系</li><li>1.7 URI 和URL</li></ul></li><li>第2章 简单的HTTP协议 <ul><li>2.1 HTTP协议用于客户端和服务器之间的通信</li><li>2.2 通过请求和响应的交换达成通信</li><li>2.3 HTTP是不保存状态的协议</li><li>2.4 请求URI 定位资源</li><li>2.5 告知服务器意图的HTTP方法</li><li>2.6 使用方法下达命令</li><li>2.7 持久连接节省通信量</li><li>2.8 使用Cookie的状态管理</li></ul></li><li>第3章 HTTP报文内的HTTP消息 <ul><li>3.1 HTTP报文</li><li>3.2 请求报文及响应报文的结构</li><li>3.3 编码提升传输速率</li><li>3.4 发送多种数据的多部分对象集合</li><li>3.5 获取部分内容的范围请求</li><li>3.6 内容协商返回最合适的内容</li></ul></li><li>第4章 返回结果的HTTP状态码 <ul><li>4.1 状态码告知从服务器端返回的请求结果</li><li>4.2 2XX 成功</li><li>4.3 3XX 重定向</li><li>4.4 4XX 客户端错误</li><li>4.5 5XX 服务器错误</li></ul></li><li>第5章 与HTTP协作的Web服务器 <ul><li>5.1 用单台虚拟主机实现多个域名</li><li>5.2 通信数据转发程序：代理、网关、隧道</li><li>5.3 保存资源的缓存</li></ul></li></ul>',2),a=[_];function o(s,c,P,d,r,n){return T(),i("div",null,a)}const H=l(t,[["render",o]]);export{p as __pageData,H as default};
