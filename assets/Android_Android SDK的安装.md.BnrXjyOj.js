import{_ as a,c as s,o as e,a2 as t}from"./chunks/framework.84TDCN6B.js";const b=JSON.parse('{"title":"Android SDK的安装","description":"","frontmatter":{},"headers":[],"relativePath":"Android/Android SDK的安装.md","filePath":"Android/Android SDK的安装.md"}'),i={name:"Android/Android SDK的安装.md"},o=t(`<h1 id="android-sdk的安装" tabindex="-1">Android SDK的安装 <a class="header-anchor" href="#android-sdk的安装" aria-label="Permalink to &quot;Android SDK的安装&quot;">​</a></h1><h2 id="安装jdk和设置环境变量" tabindex="-1">安装JDK和设置环境变量 <a class="header-anchor" href="#安装jdk和设置环境变量" aria-label="Permalink to &quot;安装JDK和设置环境变量&quot;">​</a></h2><p>去官网（ <a href="https://download.oracle.com/" target="_blank" rel="noreferrer">https://download.oracle.com/</a> ）下载并安装对应的JDK（JavaSE Development Kit）版本。</p><p>注意，要选择与React Native、Android SDK、Gradle兼容的JDK版本，版本太新或太旧会报错，需要根据提示安装合适的版本。</p><p>目前，与Gradle 8.6兼容的JDK版本范围是17——20。</p><p>在用户环境变量中添加如下条目：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>变量名：JAVA_HOME</span></span>
<span class="line"><span>值：D:\\Program Files\\Java\\jdk-20（根据你自己的安装路径修改）</span></span></code></pre></div><p>在用户的Path环境变量新增一条：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>%JAVA_HOME%\\bin</span></span></code></pre></div><p>注销或重启以使环境变量生效。运行如下命令检查版本：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>javac -version</span></span></code></pre></div><h2 id="设置android-home环境变量" tabindex="-1">设置ANDROID_HOME环境变量 <a class="header-anchor" href="#设置android-home环境变量" aria-label="Permalink to &quot;设置ANDROID_HOME环境变量&quot;">​</a></h2><p>首先，新建一个文件夹作为Android SDK的存放目录，例如：<code>D:\\android-sdk</code>。目录路径不要带有中文、空格，也不要在需要管理员权限的目录下创建。</p><p>然后，设置用户环境变量名<code>ANDROID_HOME</code>，其变量值为你刚刚新建的这个目录。</p><p>请注意，设置ANDROID_HOME环境变量这个步骤非常重要，Android SDK的许多工具都依赖于读取ANDROID_HOME这个变量，例如sdkmanager安卓包管理工具、adb安卓调试桥，这些工具如果读取不到这个变量，就会报错。后面安装的一些工具包也会放在ANDROID_HOME下。后面我们会频繁使用ANDROID_HOME。</p><p>然后，注销或重启电脑以使环境变量生效。</p><h2 id="下载命令行工具压缩包并解压" tabindex="-1">下载命令行工具压缩包并解压 <a class="header-anchor" href="#下载命令行工具压缩包并解压" aria-label="Permalink to &quot;下载命令行工具压缩包并解压&quot;">​</a></h2><p>使用浏览器访问<a href="https://developer.android.google.cn/studio?hl=zh-cn" target="_blank" rel="noreferrer">https://developer.android.google.cn/studio?hl=zh-cn</a> 将页面拉到最底部，可以清晰地找到“仅限命令行工具”，根据平台下载对应的压缩包，这里我们选择Windows版本，压缩包体积应该在150MB左右。</p><p>然后解压，将解压出来的cmdline-tools文件夹放到ANDROID_HOME文件夹下。</p><h2 id="移动文件到合适的位置" tabindex="-1">移动文件到合适的位置 <a class="header-anchor" href="#移动文件到合适的位置" aria-label="Permalink to &quot;移动文件到合适的位置&quot;">​</a></h2><p>经过了上述两步后，现在，你的ANDROID_HOME/cmdlines-tools应该有如下四个子文件或文件夹：bin、lib、NOTICE.txt、source.prolerties。</p><p>现在，在ANDROID_HOME/cmdlines-tools中新建一个名为latest的文件夹，将上面的四个文件移动到这里。这一步是官方文档推荐的做法，目的是方便cmdline-tools版本的管理。</p><p>现在，你的ANDROID_HOME/cmdlines-tools/latest目录应该有如下4个子文件或文件夹：</p><ul><li>bin</li><li>lib</li><li>NOTICE.txt</li><li>source.prolerties</li></ul><h2 id="添加path环境变量" tabindex="-1">添加Path环境变量 <a class="header-anchor" href="#添加path环境变量" aria-label="Permalink to &quot;添加Path环境变量&quot;">​</a></h2><p>在系统的Path环境变量中添加条目：</p><ul><li><code>%ANDROID_HOME%\\cmdline-tools\\latest\\bin</code></li></ul><p>这是为了方便直接调用该文件夹下的sdkmanager.bat。sdkmanager.bat 用于查看、安装、更新和卸载 Android SDK 的软件包。</p><h2 id="安装所需的工具包" tabindex="-1">安装所需的工具包 <a class="header-anchor" href="#安装所需的工具包" aria-label="Permalink to &quot;安装所需的工具包&quot;">​</a></h2><p>首先，使用如下命令列出可用的软件包及其版本：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager.bat  --list --no_https --proxy=http --proxy_host=g.cn --proxy_port=80</span></span></code></pre></div><p>后面的--proxy_host表示国内的镜像仓库，因为国外的无法访问。</p><p>任何Android SDK都至少需要安装如下三个包：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager.bat &quot;build-tools;34.0.0&quot; &quot;platform-tools&quot; &quot;platforms;android-34&quot; --no_https --proxy=http --proxy_host=g.cn --proxy_port=80</span></span></code></pre></div><p>安卓模拟器可以选择性安装，或者直接使用真机。</p><p>这里对上面3个工具包的含义做一些解释：</p><ul><li>&quot;build-tools;34.0.0&quot; ： build工具，直接安装list列表中最高的那个版本即可，目前是34.0.0。</li><li>&quot;platform-tools&quot; ：平台工具，没有版本选择，默认安装最新版，直接写这个即可。</li><li>&quot;platforms;android-34&quot; ：注意，这里很重要。这里34的意思是安卓的API-Level。简单点说，Android13对应api34，Android13对应api33。一般而言，android-34可以兼容安卓13和12。</li></ul><p>使用如下命令检查已经安装的包：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager.bat  --list_installed</span></span></code></pre></div><p>输出内容：应该至少包含如下三个条目：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Installed packages:</span></span>
<span class="line"><span>  Path                 | Version | Description                | Location</span></span>
<span class="line"><span>  -------              | ------- | -------                    | -------</span></span>
<span class="line"><span>  build-tools;34.0.0   | 34.0.0  | Android SDK Build-Tools 34 | build-tools\\34.0.0</span></span>
<span class="line"><span>  platform-tools       | 35.0.0  | Android SDK Platform-Tools | platform-tools</span></span>
<span class="line"><span>  platforms;android-34 | 3       | Android SDK Platform 34    | platforms\\android-34</span></span></code></pre></div><h2 id="接受许可" tabindex="-1">接受许可 <a class="header-anchor" href="#接受许可" aria-label="Permalink to &quot;接受许可&quot;">​</a></h2><p>这个步骤容易被忽略，但却非常非常重要，一定一定要执行！使用如下命令接受许可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sdkmanager --licenses</span></span></code></pre></div><p>系统会提示你接受所有尚未接受的许可。在每一次终端的询问中需要手动输入 y 表示同意使用协议，默认是N（不同意）。</p><h2 id="添加path环境变量-1" tabindex="-1">添加path环境变量 <a class="header-anchor" href="#添加path环境变量-1" aria-label="Permalink to &quot;添加path环境变量&quot;">​</a></h2><p>在系统的path环境变量中新增如下两项：</p><ul><li><code>%ANDROID_HOME%\\platform-tools</code></li><li><code>%ANDROID_HOME%\\build-tools\\34.0.0</code></li></ul><p>注销或重启电脑以使环境变量生效。输入如下命令检查环境变量是否生效：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span></span></code></pre></div><h2 id="检查android-sdk是否配置完整" tabindex="-1">检查Android SDK是否配置完整 <a class="header-anchor" href="#检查android-sdk是否配置完整" aria-label="Permalink to &quot;检查Android SDK是否配置完整&quot;">​</a></h2><p>在React Native项目根目录中，运行如下命令检查Android SDK是否配置完整：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctor</span></span></code></pre></div>`,53),n=[o];function l(p,d,r,h,c,u){return e(),s("div",null,n)}const k=a(i,[["render",l]]);export{b as __pageData,k as default};
