import{_ as e,c as s,o as a,a2 as t}from"./chunks/framework.84TDCN6B.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"PowerShell/使用where和where-object筛选结果.md","filePath":"PowerShell/使用where和where-object筛选结果.md"}'),n={name:"PowerShell/使用where和where-object筛选结果.md"},p=t(`<p>Linux输出的结果是纯文本，而Powershell输出的结果为对象或包含对象的集合。</p><p>使用where-object命令从字段中筛选匹配的值，该命令的别名是where和?。</p><p>例如，get-alias的输出结果如下，有两个字段：CommandType和Name</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CommandType     Name  </span></span>
<span class="line"><span>-----------     ----     </span></span>
<span class="line"><span>Alias           % -&gt; ForEach-Object</span></span>
<span class="line"><span>Alias           ? -&gt; Where-Object</span></span>
<span class="line"><span>......</span></span></code></pre></div><p>要筛选出包含where的别名，可以使用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>get-alias | where-object {$_.name -contains &quot;where&quot;}</span></span></code></pre></div><p>where-object会依次迭代集合中的每个对象，<code>$_</code>表示当前对象。</p><p>还可以省略$_ 和 花括号，如下是简写模式：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get-alias</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> where-object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -contains</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;where&quot;</span></span></code></pre></div><p>还可以使用？作为别名，如下是最精简的方式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>get-alias | ? name -contains &quot;where&quot;</span></span></code></pre></div>`,11),i=[p];function l(o,h,c,r,d,g){return a(),s("div",null,i)}const u=e(n,[["render",l]]);export{k as __pageData,u as default};
