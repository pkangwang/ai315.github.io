import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.84TDCN6B.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Office Skills/使用vuepress-theme-hope搭建个人博客.md","filePath":"Office Skills/使用vuepress-theme-hope搭建个人博客.md"}'),p={name:"Office Skills/使用vuepress-theme-hope搭建个人博客.md"},t=n(`<h2 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h2><p>1、安装pnpm</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm i -g pnpm</span></span></code></pre></div><p>2、创建项目</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm create vuepress-theme-hope my-docs</span></span></code></pre></div><p>我们会在根目录看到src文件夹，这就是放置md文档的地方，新建一个文件例如demo123.md，在里面写一些内容。</p><p>3、运行与构建</p><p>这时会在package.json中会看到：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;docs:build&quot;: &quot;vuepress build src&quot;,</span></span>
<span class="line"><span>    &quot;docs:clean-dev&quot;: &quot;vuepress dev src --clean-cache&quot;,</span></span>
<span class="line"><span>    &quot;docs:dev&quot;: &quot;vuepress dev src&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>运行如下命令开发调试：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm docs:dev</span></span></code></pre></div><p>终端会输出一个网址localhost:8080，打开这个网址就可以看到博客主页，在地址栏将网址改成localhost:8080/demo123.html，就可以看到刚刚编辑的md文件渲染出来的网页了。</p><p>运行如下命令构建，这会输出在src/.vuepress/dist目录下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pnpm docs:build</span></span></code></pre></div><h2 id="网站设置" tabindex="-1">网站设置 <a class="header-anchor" href="#网站设置" aria-label="Permalink to &quot;网站设置&quot;">​</a></h2><p>配置文件在.vuepress/config.ts 或 .vuepress/config.js 中。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .vuepress/config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { hopeTheme } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vuepress-theme-hope&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 站点选项</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  theme: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hopeTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 主题选项</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      navbar:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识1/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识2/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识3/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      logo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/logo.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 网站图标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 主题行为选项 (可选)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="布局设置" tabindex="-1">布局设置 <a class="header-anchor" href="#布局设置" aria-label="Permalink to &quot;布局设置&quot;">​</a></h2><p>这一部分在搭建文档型博客的时候用的比较多。</p><h3 id="导航栏" tabindex="-1">导航栏 <a class="header-anchor" href="#导航栏" aria-label="Permalink to &quot;导航栏&quot;">​</a></h3><p>每个目录下的README.md是目录文件，会输出为index.html，如果要指向该文件，只需要写一个斜杠即可， 例如：</p><ul><li>要引用根目录下的REAMDE.md，只需要使用&quot;/&quot;</li><li>要引用知识1文件夹下的README.md，只需要使用&quot;知识1&quot;。</li></ul><p>一个典型的导航栏示例如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识1/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识2/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识3/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;about&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 以斜杠结尾会自动寻找README.md，等价于：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// navbar:[&quot;知识1/README.md&quot;,&quot;知识2/README.md&quot;,&quot;知识3/README.md&quot;,&quot;about.md&quot;],</span></span></code></pre></div><p>有些时候希望将多个知识合并成一个下拉列表，例如不希望将html、css、javascript都直接显示在导航栏，而希望在下拉列表，则可以：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 前端</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;前端&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , icon: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;circle-info&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, children : [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;html/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;css/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;javascript/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">navbar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识1/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识2/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;知识3/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,前端],</span></span></code></pre></div><h3 id="侧边栏" tabindex="-1">侧边栏 <a class="header-anchor" href="#侧边栏" aria-label="Permalink to &quot;侧边栏&quot;">​</a></h3><p>站点侧边栏的配置由主题选项中的 sidebar 控制。</p><p>可以采用非常简单的方式让侧边栏从文件结构中全部自动生成：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .vuepress/config.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { hopeTheme } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;vuepress-theme-hope&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  theme: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hopeTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sidebar: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;structure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>那么自动生成的侧边栏如何控制显示的顺序呢？可以通过页面的Frontmatter的index选项控制是否被自动显示到侧边栏，通过order选项控制排序，当order为正数时，越小越靠前，当order为负数时，越大越靠后。如果没有设置，则按照文件名称排序。</p><p><strong>嵌套的标题链接</strong></p><p>默认情况下，侧边栏会自动地显示由当前页面的标题(headers)组成的链接，并按照页面本身的结构进行嵌套，你可以在主题选项中通过 headerDepth 来修改它的行为。默认的深度(也是最大的深度)是 2，它将提取到 h2 和 h3 的标题，设置成 0 将会禁用标题(headers)链接。</p><h2 id="首页设置" tabindex="-1">首页设置 <a class="header-anchor" href="#首页设置" aria-label="Permalink to &quot;首页设置&quot;">​</a></h2><p>vuepress-theme-hope 保留了默认主题的首页配置，在此基础上改进样式与配置。</p><p>如果想要使用它，请在 frontmatter 中设置 home: true。任何 frontmatter 之后的内容将会以普通的 Markdown 被渲染，并插入到主页渲染内容的底部。</p><ul><li>heroText 设置主标题</li><li>通过 tagline 设置副标题。</li><li>bgImage，设置背景图片，但需要注意必须填入完整 URL 或绝对路径。如果你希望信息全屏展示，你可以设置 heroFullScreen: true。</li></ul><p><strong>主页按钮</strong></p><p>你可以将一些重要的链接以按钮的形式展示在主页中。</p><p>你可以通过 actions 设置它们，它是一个数组，每个元素都是一个对象，包含以下键值:</p><ul><li>text: 按钮文字</li><li>link: 按钮链接</li><li>type: 按钮类型 (仅支持 &quot;primary&quot; 与 &quot;default&quot; (默认))</li><li>icon(可选): 可填入完整路径或绝对路径的图片链接，或 FontClass</li></ul><p>分为功能与亮点。</p><p>参考<a href="https://theme-hope.vuejs.press/zh/guide/layout/home.html" target="_blank" rel="noreferrer">主页/指南/布局/首页</a></p>`,43),e=[t];function l(h,k,o,r,d,E){return a(),i("div",null,e)}const g=s(p,[["render",l]]);export{u as __pageData,g as default};
