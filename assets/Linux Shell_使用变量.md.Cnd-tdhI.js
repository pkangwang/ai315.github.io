import{_ as s,c as a,o as e,a2 as i}from"./chunks/framework.84TDCN6B.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Linux Shell/使用变量.md","filePath":"Linux Shell/使用变量.md"}'),n={name:"Linux Shell/使用变量.md"},p=i(`<p>变量在Linux脚本中非常常见。</p><h2 id="声明变量并赋值" tabindex="-1">声明变量并赋值 <a class="header-anchor" href="#声明变量并赋值" aria-label="Permalink to &quot;声明变量并赋值&quot;">​</a></h2><p>声明变量很简单，只需要使用等号将变量名和变量值连接起来即可：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a=1</span></span>
<span class="line"><span>str=hello</span></span>
<span class="line"><span>echo $a</span></span>
<span class="line"><span>echo $str</span></span></code></pre></div><p>如果值有空格，则需要使用引号：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">str</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =&quot;hello bash&quot;</span></span></code></pre></div><p>要特别注意，等号两边不能有空格，下面的命令是错的：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a  =  1</span></span>
<span class="line"><span>bash: a: command not found</span></span></code></pre></div><p>bash会把a当做命令、= 和1当做参数去执行。</p><h2 id="打印变量" tabindex="-1">打印变量 <a class="header-anchor" href="#打印变量" aria-label="Permalink to &quot;打印变量&quot;">​</a></h2><p>使用echo加上美元符号$和花括号打印变量：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>echo $PATH</span></span>
<span class="line"><span>echo \${PATH}</span></span></code></pre></div><p>如果变量名称不存在空格和特殊字符，上面两种方式都可以。如果存在空格或特殊字符，变量名称就要用花括号括起来。</p><h2 id="单引号和双引号" tabindex="-1">单引号和双引号 <a class="header-anchor" href="#单引号和双引号" aria-label="Permalink to &quot;单引号和双引号&quot;">​</a></h2><ul><li>双引号会首先解析内部的变量、命令等，再转成结果返回。</li><li>单引号按原样输出。</li></ul><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>name=张三</span></span>
<span class="line"><span>echo &quot;你好，\${name}&quot; # 输出 你好，张三</span></span>
<span class="line"><span>echo &#39;你好，\${name}&#39; # 输出 你好，\${name}</span></span></code></pre></div><h2 id="字符串转义" tabindex="-1">字符串转义 <a class="header-anchor" href="#字符串转义" aria-label="Permalink to &quot;字符串转义&quot;">​</a></h2><p>有些时候我们恰好需要用到特殊字符本来的含义，例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;coffee is </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$five</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><p>这里会找到名为five的变量解析出来，但我们的本意是只想显示“咖啡是5美元”，所以使用转义：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;coffee is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">five&quot;</span></span></code></pre></div><p>这样就输出了“coffee is $five”。</p>`,23),t=[p];function l(h,o,c,d,r,u){return e(),a("div",null,t)}const v=s(n,[["render",l]]);export{g as __pageData,v as default};
