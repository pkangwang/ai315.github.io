import{_ as a,c as t,o as e,a2 as s}from"./chunks/framework.84TDCN6B.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Flutter/路由.md","filePath":"Flutter/路由.md"}'),n={name:"Flutter/路由.md"},p=s(`<h2 id="路由设置" tabindex="-1">路由设置 <a class="header-anchor" href="#路由设置" aria-label="Permalink to &quot;路由设置&quot;">​</a></h2><p>整个应用的路由配置在该组件的routes属性中，以键值对的形式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;/&quot;:(BuildContext context)=&gt;HomePage(), //默认页面</span></span>
<span class="line"><span>&quot;/A&quot;:(BuildContext context)=&gt;PageA(), //页面A</span></span>
<span class="line"><span>&quot;/B&quot;:(BuildContext context)=&gt;PageB(), //页面B</span></span></code></pre></div><p>默认页面的三种方式：</p><ul><li>routes中设置键为&quot;/&quot;，推荐使用</li><li>MateriallApp组件的home属性</li><li>MateriallApp组件的initialRoute属性</li></ul><h2 id="路由跳转" tabindex="-1">路由跳转 <a class="header-anchor" href="#路由跳转" aria-label="Permalink to &quot;路由跳转&quot;">​</a></h2><p>A到B：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>navigator.of(context).pushNamed(&quot;/B&quot;);</span></span></code></pre></div><p>B回到A:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>navigator.of(context).pop();</span></span></code></pre></div><h2 id="路由传参" tabindex="-1">路由传参 <a class="header-anchor" href="#路由传参" aria-label="Permalink to &quot;路由传参&quot;">​</a></h2><p>路由往往是单向的，例如从A跳转到B，再从B回到A。</p><p>基本分为三步：</p><ul><li>A向B传参，并接收B的回传</li><li>B向A回传</li></ul><p>A到B传递参数，并接收B的回传：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>navigator.of(context).pushNamed(&quot;/B&quot;,arguments:data1).then((value){</span></span>
<span class="line"><span>    print(&quot;页面B的回传参数是$value&quot;);</span></span>
<span class="line"><span>})</span></span></code></pre></div><p>B到A回传参数：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>navigator.of(context).pop(data2)</span></span></code></pre></div>`,18),o=[p];function i(l,c,d,u,r,h){return e(),t("div",null,o)}const _=a(n,[["render",i]]);export{v as __pageData,_ as default};
