import{_ as i,c as s,o as a,a2 as l}from"./chunks/framework.84TDCN6B.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Flutter/按钮Button组件.md","filePath":"Flutter/按钮Button组件.md"}'),n={name:"Flutter/按钮Button组件.md"},t=l(`<p>常见按钮类型如下：</p><ul><li>MaterialButton ：Material Design风格按钮</li><li>RaisedButton：凸起按钮</li><li>FlatButton： 扁平化按钮</li><li>OutlineButto：有外边框按钮</li><li>IconButton ：通过图标创建的按钮</li><li>DropdownButton： 下拉列表框按钮</li><li>FloatingActionButton：浮动按钮</li></ul><p>MaterialButton组件的属性一览：</p><ul><li>onPressed：必须提供，单击事件回调</li><li>OnHighlightChanged：高亮显示的回调</li><li>textColor：文字颜色</li><li>textTheme：文字主题</li><li>color：背景色</li><li>disabledTextColor：不可单击时文字颜色</li><li>highlightColor：单击高亮时背景色</li><li>splashColor ：水波纹颜色</li><li>shape：按钮样式</li><li>minWidth：最小宽度</li><li>height：按钮高度</li><li>padding：内容周围边距</li><li>child：子widget</li></ul><p>Iconbutton是通过图标创建的按钮，在app上使用较多，必须提供的两个属性是icon图标和onPressed回调函数，其使用示例如下：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IconButton</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buildIconButton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    icon：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Icons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.add，</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    onPressed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如下示例是一个体育场式的按钮效果：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MaterialButton</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buildMaterialButton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    child</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;登录&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 按钮上显示的文字</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RoundedRectangleBorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        side</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BorderSide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.red,width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BorderStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.solid), </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 边框样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        borderRadius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BorderRadius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">circular</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 边框圆角</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>按钮的一些交互事件如下所示：</p><ul><li>onPressed：单击</li><li>onHighLightChanged：按下时和抬起手指时都会触发，按下时先于onPressed</li><li>onLongPress：长按</li></ul>`,10),h=[t];function p(k,e,d,r,E,o){return a(),s("div",null,h)}const y=i(n,[["render",p]]);export{c as __pageData,y as default};
